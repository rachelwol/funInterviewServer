{
  "questions": [
    {
      "question": "מהו Two-Way Data Binding באנגולר?",
      "options": [
        "קישור נתונים דו כיווני בין התצוגה למודל",
        "קישור נתונים חד כיווני",
        "מנגנון לטיפול באירועים",
        "שיטה להעברת מידע בין קומפוננטות"
      ],
      "correctAnswer": 0,
      "explain": "Two-Way Data Binding הוא מנגנון המאפשר סנכרון אוטומטי של נתונים בין המודל לתצוגה ולהפך. כאשר משתנה ערך במודל, התצוגה מתעדכנת אוטומטית, וכאשר המשתמש משנה ערך בתצוגה, המודל מתעדכן אוטומטית. זה מושג באמצעות הסינטקס [(ngModel)]."
    },
    {
      "question": "מהו Dependency Injection באנגולר?",
      "options": [
        "טכניקה לניהול state",
        "מנגנון להזרקת תלויות ושירותים",
        "דרך ליצירת קומפוננטות",
        "שיטה לניהול ראוטינג"
      ],
      "correctAnswer": 1,
      "explain": "Dependency Injection הוא דפוס תכנון המאפשר להזריק תלויות (כמו שירותים) לקומפוננטות במקום ליצור אותן בתוך הקומפוננטה. זה מאפשר קוד מודולרי יותר, קל יותר לבדיקה ותחזוקה, ומאפשר שיתוף שירותים בין קומפוננטות שונות."
    },
    {
      "question": "מהו השימוש ב-ngOnInit?",
      "options": [
        "מתודה שרצה בסיום הקומפוננטה",
        "מתודה שרצה בתחילת הקומפוננטה",
        "מתודה לטיפול בשגיאות",
        "מתודה לניהול lifecycle hooks"
      ],
      "correctAnswer": 1,
      "explain": ""
    },
    {
      "question": "מהו ContentChild באנגולר?",
      "options": [
        "דקורטור לגישה לתוכן המועבר דרך ng-content",
        "סוג של קומפוננטה",
        "מנגנון ניתוב",
        "שיטה ליצירת תבניות"
      ],
      "correctAnswer": 0,
      "explain": "ContentChild הוא דקורטור המאפשר גישה לאלמנט שהועבר דרך ng-content. בניגוד ל-ViewChild שניגש לאלמנטים בתבנית הקומפוננטה עצמה, ContentChild מאפשר גישה לתוכן שהוזרק מבחוץ."
    },
    {
      "question": "מהו NgZone באנגולר?",
      "options": [
        "מנגנון לניהול זיהוי שינויים",
        "כלי לניהול state",
        "ספריית UI",
        "מנגנון ניתוב"
      ],
      "correctAnswer": 0,
      "explain": "NgZone הוא שירות המנהל את זיהוי השינויים באנגולר. הוא מאפשר הרצת קוד בתוך או מחוץ לזיהוי השינויים האוטומטי של אנגולר, מה שיכול לשפר ביצועים במקרים מסוימים."
    },
    {
      "question": "מהו Resolver באנגולר?",
      "options": [
        "שירות לטעינת נתונים לפני ניווט לראוט",
        "כלי לפתרון תלויות",
        "מנגנון לטיפול בשגיאות",
        "שיטה להעברת נתונים"
      ],
      "correctAnswer": 0,
      "explain": "Resolver הוא שירות המאפשר טעינת נתונים לפני שמתבצע ניווט לראוט מסוים. זה מבטיח שכל הנתונים הנדרשים יהיו זמינים לפני שהקומפוננטה מוצגת למשתמש."
    }
  ]
}