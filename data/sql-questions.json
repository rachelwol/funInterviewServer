{
  "questions": [
    {
      "question": "מהו ההבדל בין INNER JOIN ל-LEFT JOIN?",
      "options": [
        "אין הבדל משמעותי",
        "INNER JOIN מחזיר רק התאמות, LEFT JOIN מחזיר את כל השורות מהטבלה השמאלית",
        "LEFT JOIN מהיר יותר",
        "INNER JOIN תמיד מחזיר יותר תוצאות"
      ],
      "correctAnswer": 1,
      "explain": ""
    },
    {
      "question": "מהו ההבדל בין DELETE ל-TRUNCATE?",
      "options": [
        "DELETE מוחק שורות ספציפיות, TRUNCATE מוחק את כל הטבלה",
        "אין הבדל",
        "TRUNCATE מהיר יותר אבל פחות בטוח",
        "DELETE לא ניתן לביטול"
      ],
      "correctAnswer": 0,
      "explain": ""
    },
    {
      "question": "מהו Index בSQL?",
      "options": [
        "שיטה לאחסון נתונים",
        "מבנה נתונים לשיפור ביצועי שאילתות",
        "סוג של טבלה",
        "מפתח ראשי"
      ],
      "correctAnswer": 1,
      "explain": ""
    },
    {
      "question": "מהו ההבדל בין WHERE ל-HAVING?",
      "options": [
        "WHERE משמש לסינון לפני GROUP BY, HAVING אחרי",
        "אין הבדל ביניהם",
        "HAVING מהיר יותר",
        "WHERE משמש רק למספרים"
      ],
      "correctAnswer": 0,
      "explain": "WHERE משמש לסינון שורות לפני ביצוע GROUP BY, בעוד ש-HAVING משמש לסינון תוצאות לאחר ה-GROUP BY. WHERE פועל על שורות בודדות, בעוד ש-HAVING פועל על קבוצות שנוצרו על ידי GROUP BY. לדוגמה, אם רוצים לסנן לפי סכום המכירות של כל לקוח, חייבים להשתמש ב-HAVING כי הסכום מחושב אחרי הקיבוץ."
    },
    {
      "question": "מהו Clustered Index?",
      "options": [
        "סוג של טבלה",
        "אינדקס הקובע את הסדר הפיזי של הנתונים",
        "שיטת גיבוי",
        "סוג של שאילתה"
      ],
      "correctAnswer": 1,
      "explain": "Clustered Index קובע את הסדר הפיזי שבו הנתונים מאוחסנים בטבלה. לכל טבלה יכול להיות רק Clustered Index אחד, והוא משפיע על הביצועים של שאילתות שמסתמכות על סדר הנתונים. לרוב, המפתח הראשי (Primary Key) משמש כ-Clustered Index."
    },
    {
      "question": "מהו Window Function ב-SQL?",
      "options": [
        "פונקציה המבצעת חישובים על קבוצת שורות",
        "פונקציה לניהול חלונות",
        "סוג של טריגר",
        "שיטה ליצירת טבלאות"
      ],
      "correctAnswer": 0,
      "explain": "Window Function מאפשרת לבצע חישובים על קבוצת שורות תוך שמירה על הגרנולריות של השורות הבודדות. זה שימושי לחישובים כמו דירוג, ממוצע נע, או השוואה לשורות קודמות/הבאות."
    },
    {
      "question": "מהו Materialized View?",
      "options": [
        "טבלה המכילה תוצאות מחושבות מראש של שאילתה",
        "סוג של אינדקס",
        "שיטת גיבוי",
        "טבלה זמנית"
      ],
      "correctAnswer": 0,
      "explain": "Materialized View הוא טבלה המכילה תוצאות מחושבות מראש של שאילתה מורכבת. זה משפר ביצועים כי התוצאות נשמרות פיזית ולא מחושבות בכל פעם מחדש, אך דורש עדכון תקופתי."
    },
    {
      "question": "מהו Table Partitioning?",
      "options": [
        "חלוקת טבלה גדולה למספר חלקים פיזיים",
        "שיטת גיבוי",
        "סוג של אינדקס",
        "שיטה למיון נתונים"
      ],
      "correctAnswer": 0,
      "explain": "Table Partitioning היא שיטה לחלוקת טבלה גדולה למספר חלקים פיזיים על פי תנאי מסוים (למשל תאריך). זה משפר ביצועים וניהול נתונים בטבלאות גדולות מאוד."
    }
  ]
}